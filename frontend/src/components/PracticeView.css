/* src/components/PracticeView.css */

/* --- Container & Layout --- */
.container {
    text-align: center;
    padding: 20px;
    background-color: teal;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    color: #f0f0f0;
    font-family: Arial, sans-serif;
  }
  
  .header {
    margin-bottom: 15px;
    color: #fff;
  }
  
  .controlsArea {
    margin-top: 10px;
    min-height: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
  }
  
  /* --- Card Styles --- */
  .cardContainer {
    perspective: 1000px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 15px;
    min-height: 200px;
  }
  
  .card {
    width: 300px;
    height: 200px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    cursor: pointer;
  }
  
  .cardFlipped {
    transform: rotateY(180deg);
  }
  
  .cardFace {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: 15px;
    font-size: 22px;
    padding: 20px;
    box-sizing: border-box;
    text-align: center;
    color: white;
  }
  
  .cardFace.front {
    background-color: #4a90e2;
  }
  
  .cardFace.back {
    background-color: #1a4b8c;
    transform: rotateY(180deg);
  }
  
  /* --- Camera & Gesture Styles --- */
  .cameraContainer {
    position: relative; /* Needed for absolute positioning of canvas */
    width: 240px;
    height: 180px;
    margin-top: 10px;
    margin-bottom: 10px;
    border: 3px solid #6c5b7b;
    border-radius: 10px;
    overflow: hidden;
    background-color: #222;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
  
  .videoFeed {
    display: block; /* Prevents potential extra space */
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: scaleX(-1); /* Mirror mode */
  }
  
  /* Canvas Overlay for Landmarks */
  .landmarkCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Fill container */
    height: 100%; /* Fill container */
    pointer-events: none; /* Clicks pass through */
    transform: scaleX(-1); /* Mirror drawing */
    /* background-color: rgba(0, 255, 0, 0.1); */ /* Debug canvas position */
  }
  
  
  /* Indicator for active detection */
  .detectionIndicator {
      position: absolute;
      top: 5px;
      right: 5px;
      width: 15px;
      height: 15px;
      background-color: red;
      border-radius: 50%;
      animation: pulse 1s infinite;
      z-index: 10; /* Ensure it's above canvas/video if needed */
  }
  
  @keyframes pulse {
      0% { opacity: 1; }
      50% { opacity: 0.3; }
      100% { opacity: 1; }
  }
  
  
  .gestureStatus {
    margin-top: 5px;
    min-height: 24px;
    font-size: 16px;
    font-weight: bold;
    color: #ffd700;
  }
  
  /* --- Text Styles --- */
  .instructionText {
    font-size: 16px;
    color: #f0f0f0;
    font-weight: 500;
  }
  
  .hintText {
    color: #f8b195;
    font-style: italic;
    max-width: 90%;
    margin: 10px auto;
    background-color: rgba(0, 0, 0, 0.2);
    padding: 8px 12px;
    border-radius: 8px;
    font-size: 14px;
  }
  
  .loadingText {
    font-size: 18px;
    font-weight: bold;
    color: #fff;
  }
  
  .errorText {
    color: #ff6b6b;
    font-weight: bold;
    background-color: rgba(0, 0, 0, 0.3);
    padding: 10px;
    border-radius: 5px;
    margin-top: 10px;
    /* Use display: inline-block for inline errors if needed */
  }
  
  .sessionCompleteText {
    font-size: 24px;
    font-weight: bold;
    color: #90ee90;
    margin: 20px;
  }
  
  /* --- Button Styles --- */
  .practiceButton {
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 25px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    font-weight: 500;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    min-width: 150px;
    background-color: #f67280;
  }
  
  .practiceButton:hover:not(:disabled) { /* Exclude disabled state from hover */
    background-color: #e8616c;
    transform: translateY(-2px);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
  }
  
  .practiceButton:disabled {
      background-color: #cccccc;
      color: #666666;
      cursor: not-allowed;
      transform: none;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  /* Specific Button Types */
  .showAnswerButton { background-color: #6c5b7b; }
  .showAnswerButton:hover:not(:disabled) { background-color: #5a4b6b; }
  
  .nextDayButton { background-color: #c06c84; }
  .nextDayButton:hover:not(:disabled) { background-color: #a55b70; }
  
  .hintButton { background-color: #f8b195; color: #433a3f; padding: 8px 16px; font-size: 14px; }
  .hintButton:hover:not(:disabled) { background-color: #f5a180; }
  
  .easyButton { background-color: #7cb342; }
  .easyButton:hover:not(:disabled) { background-color: #6a9f37; }
  
  .hardButton { background-color: #f9a825; }
  .hardButton:hover:not(:disabled) { background-color: #e09721; }
  
  .wrongButton { background-color: #e53935; }
  .wrongButton:hover:not(:disabled) { background-color: #c9312d; }
  
  .newCardButton { margin-top: 20px; background-color: #5cdb95; color: #05386b; }
  .newCardButton:hover:not(:disabled) { background-color: #4cb87f; }
  
  .retryButton { background-color: #ffcc00; color: #333; }
  .retryButton:hover:not(:disabled) { background-color: #e6b800; }
  
  /* Container for fallback answer buttons */
  .answerButtonsContainer {
    display: flex;
    gap: 15px;
    justify-content: center;
    margin-top: 10px;
  }